#summary Developer's Guide
(Work in progress...)

=== 1. Introduction ===
This guide is for software developers who would like to work on the source code of
ics-os. The suggested development platform is a linux box with the following tools installed.

  * make
  * gcc/tcc
  * GNU binutils (ld, strip)
  * mount
  * bochs
  * nasm
  * subversion (optional)

Instructions for installing the above packages differ from one linux distribution to another. Consult the documentation for the distribution that you use.

For Ubuntu users, the following commands will install the required packages.
{{{
$sudo apt-get install build-essential
$sudo apt-get install nasm
$sudo apt-get install bochs
$sudo apt-get install tcc
$sudo apt-get install subversion
}}}
=== 2. Obtaining the Source Code ===
To obtain the source code for ics-os, visit the http://code.google.com/p/ics-os/downloads/list. 
You can also access the latest snapshot of the source tree via Subversion by following the instructions at http://code.google.com/p/ics-os/source/checkout.

=== 3. Building the Source Code ===
Building the source code for the kernel and the distribution disk is accomplished using {{{ make }}}. 

  # First extract the source distribution .tar.gz.
{{{
$tar xzvf ics-os-121808.tar.gz
}}}
  # Next, go inside the directory of the extracted source.
{{{
$cd ics-os
}}}
  # Build the kernel.
{{{
$make
}}}
  # Create the distribution floppy image. Make sure that you have root privileges(use the {{{su}}} or {{{sudo}}} command).
{{{
#make install
}}}
  # Test the distribution floppy image. This does not require root privileges.
{{{
$bochs -q
}}}
=== 4. Source Code Directory Structure ===
Top level directories.
|| *Directory* || *Description* ||
||{{{apps/}}}||Executables of application programs ||
||{{{apps-old/}}}||Executables of old application programs||
||{{{base/}}}||Contains files that will be on the root directory of the floppy distribution||
||{{{boot/}}}||Contains files for grub||
||{{{contrib/}}}||Sources for applications||
||{{{kernel/}}}||Kernel sources directory||
||{{{lib/}}}||Binaries of extension modules||
||{{{mnt/}}}||Temporary folder for mounting the floppy image when creating the distribution||
||{{{sdk/}}}||Libraries for application development||

Kernel source directories.
|| *Directory* || *Description* ||
||{{{console/}}}||Sources for the main shell||
||{{{devmgr/}}}||Sources for the device and extension manager||
||{{{dexapi/}}}||Sources for setting up the system call table||
||{{{docs/}}}||Documentation files for kernel||
||{{{filesystem/}}}||Sources for filesystem support (fat12 and iso9660)||
||{{{grub/}}}||Files needed by grub||
||{{{hardware/}}}||Sources for hardware device drivers||
||{{{iomgr/}}}||Input/Output manager code||
||{{{memory/}}}||Memory management routines||
||{{{mnt/}}}||Temporary mount directory||
||{{{module/}}}||Implementation of supported executable file formats (PE, ELF)||
||{{{process/}}}||Process management routines||
||{{{startup/}}}||Contains startup routines after bootloader finishes(enables 32-bit protected mode||
||{{{stdlib/}}}||Standard library routines||
||{{{vfs/}}}||Virtual File System implementation||
||{{{vmm/}}}||Virtual Memory Management implementation||

=== 5. A "Hello World" Command ===
This section describes an example on how to modify ics-os, specifically the kernel by adding a new command.